public override void doBeforeInsert() {
        //does triggerNew include things that try to insert 
        List<Contact> triggerNew = (List<Contact>)triggerNew;
        
        
        Set<String> contactCompanyNames = new Set<String>();
        for(Contact con : triggerNew) {
            if(con.Company_Name__c != NULL) {
                contactCompanyNames.add(con.Company_Name__c);
            }
        }
        
        
        Map<String, Id> acctName_acct = new Map<String, Id>();
        List<Account> existingAccounts = [SELECT Id, Name FROM Account WHERE Name IN :contactCompanyNames FOR UPDATE];
        
        for(Account acct: existingAccounts) {
            acctName_acct.put(acct.Name, acct.Id);
        }
        
        
        //get the cust_company_name if it is not null
        //if it is null, then just create a simple account with the cust_first_name + cust_last_name
        Map<String, Account> accountsToInsert = new Map<String, Account>();
        Map<String, Account> accountNamesToCreate = new Map<String, Account>();

        for(Contact con: triggerNew) {
            //create an account from the existing id
            if(acctName_acct.containsKey(con.Company_Name__c)) {
                con.AccountId = acctName_acct.get(con.Company_Name__c);
            } else {
                
                //does the name already exist in the temp data structure?
                if(accountNamesToCreate.containsKey(con.Company_Name__c)) {
                    accountsToInsert.put(con.Customer_Id__c, accountNamesToCreate.get(con.Company_Name__c));
                } else {
                    Account acct = new Account();
            		acct.Name = 'Account - ' + con.Customer_Id__c;
            		//if the company name is available, overwrite
            		if(con.Company_Name__c != NULL) { acct.Name = con.Company_Name__c;}
                	
                    accountNamesToCreate.put(acct.Name, acct);
            		accountsToInsert.put(con.Customer_Id__c, acct);
                }
            } 
            
        }
        
        Set<Account> accountsToInsertSet = new Set<Account>(accountsToInsert.values());
        List<Account> accountsToInsertList = new List<Account>(accountsToInsertSet);
        insert accountsToInsertList;
        
        for(Contact con: triggerNew) {
            if(accountsToInsert.containsKey(con.Customer_Id__c)) {
                con.AccountId = accountsToInsert.get(con.Customer_Id__c).Id;
            }
            
        }
    }
    